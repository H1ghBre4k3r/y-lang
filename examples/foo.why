declare printf: (str) -> void;

fn takes_fn(f: (i64) -> i64): i64 {
    printf("takes_fn\n");
    f(24)
}

fn println(val: str): void {
    printf(val);
    printf("\n");
}

struct Bar {
    hehe: f64;
    test: i64;
    value: i64;
}

struct Foo {
    random: i64;
    bar: Bar;
}

instance Foo {
fn get_val(other: i64): i64 {
    this.bar.value + other
}
}

fn main(): i64 {
    let left = 42;
    let right = 1337;
    let foo = &[left, right];
    let mut i = 0;
    while (i < 10) {
        printf("Hello\n");
        i = i + 1;
    }
    let val = takes_fn(\(x) => {
        x + x
    });
    {
        let some_strings = &["First", "Second", "Third"];
        let mut i = 0;
        while (i < 3) {
            println(some_strings[i]);
            i = i + 1;
        }
    }
    let foo = Foo {
        random: 1337,
        bar: Bar {
            hehe: 69.5,
            test: 16,
            value: 42
        }
    };
    foo.get_val(val)
}
